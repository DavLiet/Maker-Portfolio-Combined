

#include <Adafruit_VC0706.h>       //Library for TTL Camera
#include <SPI.h>                   //SPI Interface Library
#include <SD.h>                    //SD card library
#include <Wire.h>                  //I2C library is used for barometer
#include <Adafruit_MPL3115A2.h>    //library for pressure sensor
#include "DHT.h"                  //library for temp and humidity

//chip select for SD on Arduino Mega
const int chipSelect = 53;        

//variable for light sensor
#define lightSensor 2         

//variable for dht22
#define DHTPIN 9 
#define DHTTYPE DHT22 
DHT dht(DHTPIN, DHTTYPE);

//for TTL Camera
#include <SoftwareSerial.h>  
#if ARDUINO >= 100
SoftwareSerial cameraconnection = SoftwareSerial(69, 3);
#else
NewSoftSerial cameraconnection = NewSoftSerial(69, 3);
#endif
Adafruit_VC0706 cam = Adafruit_VC0706(&cameraconnection);


long id = 1;

Adafruit_MPL3115A2 baro = Adafruit_MPL3115A2();



void setup()
{
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  Serial.println("initializing card");

if(!SD.begin(chipSelect))
{
  Serial.println("Card Failure");
  return;
}
Serial.println("Card Ready");

File logFile = SD.open("Log.csv", FILE_WRITE);
if (logFile)
  {
    logFile.println(", , ,");
    String header = "ID, Light, Temperature and Humidity, Altitude";
    logFile.println(header);
    logFile.close();
    Serial.println(header);
  }
 else
 {
  Serial.println("The file cannot be opened");
 }

dht.begin();                                                                //for dht22 sensor


 //stuff for TTL camera

 
#if !defined(SOFTWARE_SPI)
#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
  if(chipSelect != 53) pinMode(53, OUTPUT); // SS on Mega
#else
  if(chipSelect != 10) pinMode(10, OUTPUT); // SS on Uno, etc.
#endif
#endif

  Serial.begin(9600);
  Serial.println("VC0706 Camera test");
  
  
  // Try to locate the camera
  if (cam.begin()) {
    Serial.println("Camera Found:");
  } else {
    Serial.println("No camera found?");
    return;
  }
  // Print out the camera version information (optional)
  char *reply = cam.getVersion();
  if (reply == 0) {
    Serial.print("Failed to get version");
  } else {
    Serial.println("-----------------");
    Serial.print(reply);
    Serial.println("-----------------");
  }

 
  cam.setImageSize(VC0706_320x240);        // Sets camera pic size to medium


  uint8_t imgsize = cam.getImageSize();
  Serial.print("Image size: ");
  if (imgsize == VC0706_640x480) Serial.println("640x480");
  if (imgsize == VC0706_320x240) Serial.println("320x240");
  if (imgsize == VC0706_160x120) Serial.println("160x120");


  
  cam.setMotionDetect(true);           // turn on motion detection


  // verify whether motion detection is active!
  Serial.print("Motion detection is ");
  if (cam.getMotionDetect()) 
    Serial.println("ON");
  else 
    Serial.println("OFF");
}

void loop()
{
  int amountLight = analogRead(lightSensor);                                //finds light intensity
  
  delay(3000);
 

  // Reading temperature or humidity takes about 250 milliseconds!
  // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
 
  float t = dht.readTemperature(); //gathers temperature in celsius
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true); //gathers temperature in fahrenheit




delay(3000);


  float altm = baro.getAltitude();
  

delay(3000);

  //This will create a data string for storing to the SD card using the CSV format
  String dataString = String(id) + "," + String(amountLight) + "," + String(f) + "," + String(altm);

  //Open and write to a file
  File logFile = SD.open("LOG.csv", FILE_WRITE); //creates file on SD called LOG. This will open as an excel spreadsheet so that the data may be easily viewed.
  if (logFile)
  {
    logFile.println(dataString);
    logFile.close();
    Serial.println(dataString);
  }
  else
  {
    Serial.println("The file would not open");
  }

  id++; //increments csv data by 1

  delay(5000);

  
  
  
  
  //Now begins the code where the picture is captured and saved to a different file in my SD card


  
  if (cam.motionDetected()) {
   Serial.println("Motion!");   
   cam.setMotionDetect(false);
   
  if (! cam.takePicture()) 
    Serial.println("Failed to snap!");
  else 
    Serial.println("Picture taken!");
  
  char filename[13];
  strcpy(filename, "IMAGE00.JPG");
  for (int i = 0; i < 100; i++) {
    filename[5] = '0' + i/10;
    filename[6] = '0' + i%10;
    // create if does not exist, do not open existing, write, sync after write
    if (! SD.exists(filename)) {
      break;
    }
  }
  
  File imgFile = SD.open(filename, FILE_WRITE);
  
  uint16_t jpglen = cam.frameLength();
  Serial.print(jpglen, DEC);
  Serial.println(" byte image");
 
  Serial.print("Writing image to "); Serial.print(filename);
  
  while (jpglen > 0) {
    // read 32 bytes at a time;
    uint8_t *buffer;
    uint8_t bytesToRead = min(32, jpglen); // change 32 to 64 for a speedup but may not work with all setups!
    buffer = cam.readPicture(bytesToRead);
    imgFile.write(buffer, bytesToRead);

    //Serial.print("Read ");  Serial.print(bytesToRead, DEC); Serial.println(" bytes");

    jpglen -= bytesToRead;
  }
  imgFile.close();
  Serial.println("...Done!");
  cam.resumeVideo();
  cam.setMotionDetect(true);
}

}
